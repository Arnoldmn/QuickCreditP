{"version":3,"sources":["../../server/controllers/loans.js"],"names":["LoansController","req","res","status","json","data","loans","body","email","createdOn","repaid","tenor","amount","installment","balance","interest","loanApplicant","users","find","_user","userId","loan","loanId","id","Date","parseFloat","push","resp","loanDetails","parseInt","params","error","statusReq","query","repaidReq","info","singleLoan","newRepayment","repayments","length","mothlyInstallment","paymentInstallment","paidAmount","userData","loanFound","loanIndex","map","index","updatedLoan","splice","send","loanRepayment","lona_history","filter","loanApplication","loansController"],"mappings":"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","sourcesContent":["import users from '../db/users';\nimport { loans, repayments } from '../db/loans';\n\nclass LoansController {\n  getAllLoans(req, res) {\n    res.status(200).json({\n      status: 200,\n      data: loans,\n    });\n  }\n\n  /**\n   *\n   * @param {*} req\n   * @param {*} res\n   * loan application\n   */\n  applyLoan(req, res) {\n    const {\n      email,\n      createdOn,\n      status,\n      repaid,\n      tenor,\n      amount,\n      installment,\n      balance,\n      interest,\n    } = req.body;\n    const loanApplicant = users.find(_user => _user.userId === req.body.userId);\n\n    const loan = [{}];\n    loan.loanId = loans.id;\n    loan.email = email;\n    loan.createdOn = new Date();\n    loan.status = status === 'rejected' || 'approved';\n    loan.repaid = parseFloat(repaid);\n    loan.tenor = parseFloat(tenor);\n    loan.amount = parseFloat(amount);\n    loan.installment = parseFloat(installment);\n    loan.balance = parseFloat(balance);\n    loan.interest = parseFloat(amount * 5) / 100;\n\n    loan.push(loan);\n    const resp = {\n      status: 200,\n      data: {\n        loanId: loans.id,\n        email: loans.email,\n        createdOn: new Date(),\n        status: loanApplicant.status,\n        repaid: loans.repaid || true || false,\n        tenor: parseFloat(loans.tenor),\n        amount: parseFloat(loans.amount),\n        installment: parseFloat(loans.installment),\n        balance: parseFloat(loans.balance),\n        interest: parseFloat(loans.interest),\n      },\n    };\n\n    res.status(200).json(resp);\n  }\n\n  /**\n   *\n   * @param {*} req\n   * @param {*} res\n   * specific loan\n   */\n\n  singleLoan(req, res) {\n    const loanDetails = loans.find(\n      loan => loan.id === parseInt(req.params.id, 10),\n    );\n    if (!loanDetails) {\n      return res.status(400).json({\n        status: 400,\n        error: 'Loan application not found',\n      });\n    }\n    res.status(200).json({\n      status: 200,\n      data: loanDetails,\n    });\n  }\n\n  /**\n   *\n   * @param {*} req\n   * @param {*} res\n   * unsettled loans\n   */\n\n  unSettledLoan(req, res) {\n    const statusReq = req.query.status;\n    const repaidReq = req.query.repaid;\n    const info = loans.find(\n      loan => loan.status === statusReq && loan.repaid === repaidReq,\n    );\n    if (!info) {\n      return res.status(403).json({\n        status: 403,\n        data: 'Loan already settled',\n      });\n    }\n\n    return res.status(200).json({\n      status: 200,\n      data: 'Unsettled loan info',\n      loans,\n    });\n  }\n\n  /**\n   *\n   * @param {*} req\n   * @param {*} res\n   * fully settled loans\n   */\n  fullySettledLoans(req, res) {\n    const statusReq = req.query.status;\n    const repaidReq = req.query.statusReq;\n    const info = loans.find(\n      loan => loan.status === statusReq && loan.repaid === repaidReq,\n    );\n    if (!info) {\n      return res.status(403).json({\n        status: 403,\n        data: 'Loan not found',\n      });\n    }\n\n    return res.status(200).json({\n      status: 200,\n      data: 'loan fully settled',\n      loans,\n    });\n  }\n\n  /**\n   *\n   * @param {*} res\n   * @param {*} req\n   * Loan repayment endpoint\n   */\n  loanRepayment(req, res) {\n    const singleLoan = loans.find(\n      loan => loan.id === parseInt(req.params.id, 10),\n    );\n    if (!singleLoan) {\n      return res.status(403).json({\n        status: 403,\n        error: \"Loan not found\"\n      });\n    }\n    const newRepayment = {\n      id: repayments.length + 1,\n      loanId: singleLoan.id,\n      createdOn: new Date(),\n      amount: singleLoan.amount,\n      mothlyInstallment: singleLoan.paymentInstallment,\n      paidAmount: req.body.paidAmount,\n      balance: singleLoan.balance,\n      userData: req.userData,\n    };\n    repayments.push(newRepayment);\n    res.status(200).json({\n      status: 200,\n      data: newRepayment,\n    });\n  }\n\n  updatedLoanRepayment() {\n    const id = parseInt(req.params.id, 10);\n    let loanFound;\n    let loanIndex;\n\n    loans.map((loan, index) => {\n      if (loan.id === id) {\n        loanFound = loan;\n        loanIndex = index;\n      }\n    });\n\n    const updatedLoan = {\n      id: loanFound.id,\n      createdOn: req.body.createdOn || loanFound.createdOn,\n      amount: req.body.amount || loanFound.amount,\n      balance: req.body.balance || loanFound.balance,\n    };\n    loans.splice(loanIndex, 1, updatedLoan);\n\n    return res.status(201).send({\n      status: 201,\n      data: 'Loan updated successfully',\n      updatedLoan,\n    });\n  }\n\n  /**\n   *\n   * @param {*} res\n   * @param {*} req\n   * Loan history endpoint\n   */\n  loanHistory(req, res) {\n    const loanRepayment = [loans];\n    const lona_history = loans.filter(email => email);\n\n    res.status(200).json({\n      status: 200,\n      data: loan,\n    });\n  }\n\n  /**\n   *\n   * @param {*} res\n   * @param {*} req\n   * Loan can be approved or rejected\n   */\n  loanStatus(req, res) {\n    const { loanApplication } = req.params;\n\n    let loanIndex = loans.find(\n      loan => loan.loanApplication === loanApplication,\n    );\n    if (loanIndex < 0) {\n      return res.status(403).json({\n        status: 403,\n        data: 'loan is not valid',\n      });\n    }\n    loanIndex = req.body.status;\n    res.status(200).json({\n      status: 200,\n      data: loanIndex,\n    });\n  }\n}\nconst loansController = new LoansController();\nexport default loansController;\n"],"file":"loans.js"}