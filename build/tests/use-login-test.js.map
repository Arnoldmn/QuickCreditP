{"version":3,"sources":["../../server/tests/use-login-test.js"],"names":["chai","should","use","chaiHttp","expect","describe","it","done","user","email","password","request","app","post","send","end","error","res","to","have","status","userInvalidInput","name","req","body","be","equal"],"mappings":";;AACA;;AACA;;AACA;;;;AAHA;AAKAA,iBAAKC,MAAL;;AACAD,iBAAKE,GAAL,CAASC,oBAAT;;IACQC,M,GAAWJ,gB,CAAXI,M;AAERC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC3BC,EAAAA,EAAE,CAAC,yEAAD,EAA4E,UAACC,IAAD,EAAU;AACpF,QAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE,uBADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;;AAKAV,qBACKW,OADL,CACaC,kBADb,EAEKC,IAFL,CAEU,qBAFV,EAGKC,IAHL,CAGUN,IAHV,EAIKO,GAJL,CAIS,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACjBb,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAb,MAAAA,IAAI;AACP,KAPL;AAQH,GAdC,CAAF;AAgBAD,EAAAA,EAAE,CAAC,2EAAD,EAA8E,UAACC,IAAD,EAAU;AACtF,QAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;;AAKAV,qBACKW,OADL,CACaC,kBADb,EAEKC,IAFL,CAEU,qBAFV,EAGKC,IAHL,CAGUN,IAHV,EAIKO,GAJL,CAIS,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACjBb,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYC,EAAZ,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,GAA3B;AACAb,MAAAA,IAAI;AACP,KAPL;AAQH,GAdC,CAAF;AAgBAD,EAAAA,EAAE,CAAC,qCAAD,EAAwC,UAACC,IAAD,EAAU;AAChD,QAAMc,gBAAgB,GAAG;AACrBC,MAAAA,IAAI,EAAE,WADe;AAErBb,MAAAA,KAAK,EAAE,EAFc;AAGrBC,MAAAA,QAAQ,EAAE;AAHW,KAAzB;;AAMAV,qBAAKW,OAAL,CAAaC,kBAAb,EAAkBC,IAAlB,CAAuB,qBAAvB,EACKC,IADL,CACUO,gBADV,EAEKN,GAFL,CAES,UAACQ,GAAD,EAAMN,GAAN,EAAc;AACfA,MAAAA,GAAG,CAAChB,MAAJ,CAAWkB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAhB,MAAAA,MAAM,CAACa,GAAG,CAACO,IAAJ,CAASR,KAAV,CAAN,CAAuBE,EAAvB,CAA0BO,EAA1B,CAA6BC,KAA7B,CAAmC,8BAAnC;AACAnB,MAAAA,IAAI;AACP,KANL;AAQH,GAfC,CAAF;AAiBH,CAlDO,CAAR","sourcesContent":["/* eslint-disable no-undef */\nimport chaiHttp from 'chai-http';\nimport chai from 'chai';\nimport app from '../server';\n\nchai.should();\nchai.use(chaiHttp);\nconst { expect } = chai;\n\ndescribe('User sign in', () => {\n    it('Should return a 201 and confirm user email and password as valid inputs', (done) => {\n        const user = {\n            email: 'johndoe@quicredit.com',\n            password: 'secret',\n        };\n\n        chai\n            .request(app)\n            .post('/api/v1/auth/signin')\n            .send(user)\n            .end((error, res) => {\n                expect(res).to.have.status(401);\n                done();\n            });\n    });\n\n    it('Should return a 403 and confirm user email and password as invalid inputs', (done) => {\n        const user = {\n            email: '',\n            password: '',\n        };\n\n        chai\n            .request(app)\n            .post('/api/v1/auth/signin')\n            .send(user)\n            .end((error, res) => {\n                expect(res).to.have.status(401);\n                done();\n            });\n    });\n\n    it('should return 401 for invalid input', (done) => {\n        const userInvalidInput = {\n            name: 'John Wick',\n            email: '',\n            password: 'secret',\n        };\n\n        chai.request(app).post('/api/v1/auth/signin')\n            .send(userInvalidInput)\n            .end((req, res) => {\n                res.should.have.status(401);\n                expect(res.body.error).to.be.equal('invalid username or password');\n                done();\n            });\n\n    });\n\n});\n"],"file":"use-login-test.js"}