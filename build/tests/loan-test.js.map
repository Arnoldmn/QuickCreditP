{"version":3,"sources":["../../server/tests/loan-test.js"],"names":["chai","should","use","chaiHttp","token","userToken","expect","describe","it","done","request","app","post","send","email","password","end","err","res","get","set","error","data","have","status","tenor","amount","installment","balance","errors","response","query","repaid","paidAmount","rerrors","put"],"mappings":"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","sourcesContent":["import chaiHttp from 'chai-http';\nimport chai from 'chai';\nimport app from '../server';\n\nchai.should();\nchai.use(chaiHttp);\nconst token = '';\nconst userToken = '';\nconst { expect } = chai;\n\ndescribe('Test loan endpoints', () => {\n    it(\"Return all loans \", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mna.mna\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .get(\"/api/v1/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .end((error, data) => {\n                        data.should.have.status(200);\n                        done();\n                    });\n            });\n    });\n\n    it(\"Should post loan application\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mna.mna\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .post(\"/api/v1/loans/apply\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .send({\n                        tenor: \"5\",\n                        amount: 450000.0,\n                        installment: 10000.0,\n                        balance: 560000\n                    })\n                    .end((error, data) => {\n                        data.should.have.status(403);\n                        done();\n                    });\n            });\n    });\n\n    it(\"Return specific loan based on it id\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mna.mna\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .post(\"/api/v1/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .send({\n                        tenor: \"3\",\n                        amount: 250000.0,\n                        installment: 9000.0,\n                        balance: 360000\n                    })\n                    .end((error, data) => {\n                        chai\n                            .request(app)\n                            .get(\"/api/v1/loans/:id\")\n                            .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                            .end((errors, response) => {\n                                response.should.have.status(403);\n                                done();\n                            });\n                    });\n            });\n    });\n\n    it(\"Return  all loans that are not fully settled\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mnpd@123\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .get(\"/api/v1/unrepaid/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .query({ status: \"approved\", repaid: \"false\" })\n                    .end((error, data) => {\n                        data.should.have.status(404);\n                        done();\n                    });\n            });\n    });\n\n    it(\"Return loans that are not fully repaid\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"mnpde@yahoo.com\",\n                password: \"mnpd@123\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .get(\"/api/v1/repaid/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .query({ status: \"approved\", repaid: \"true\" })\n                    .end((error, data) => {\n                        data.should.have.status(403);\n                        done();\n                    });\n            });\n    });\n\n    it(\"Post loan repayment based on it id\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mnpd@123\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .post(\"/api/v1/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .send({\n                        tenor: \"3\",\n                        amount: 250000.0,\n                        installment: 9000.0,\n                        balance: 360000\n                    })\n                    .end((error, data) => {\n                        chai\n                            .request(app)\n                            .post(\"/api/v1/loans/:id/repayment\")\n                            .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                            .send({\n                                paidAmount: 5000.0\n                            })\n                            .end((rerrors, response) => {\n                                response.should.have.status(403);\n                                done();\n                            });\n                    });\n            });\n    });\n\n    it(\"Should return all loans history\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mnpd@123\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .post(\"/api/v1/loans\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .send({\n                        tenor: \"3\",\n                        amount: 250000.0,\n                        installment: 9000.0,\n                        balance: 360000\n                    })\n                    .end((error, data) => {\n                        chai\n                            .request(app)\n                            .get(\"/api/v1/loans/:id/repayment\")\n                            .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                            .end((rerrors, response) => {\n                                response.should.have.status(404);\n                                done();\n                            });\n                    });\n            });\n    });\n\n    it(\"Should return loan status\", done => {\n        chai\n            .request(app)\n            .post(\"/api/v1/auth/signin\")\n            .send({\n                email: \"admin@quickcredit.com\",\n                password: \"mnpd@123\"\n            })\n            .end((err, res) => {\n                chai\n                    .request(app)\n                    .put(\"/api/v1/loans/:id\")\n                    .set({ email: \"admin@quickcredit.com\", password: \"1234567\" })\n                    .send({\n                        status: \"rejected\"\n                    })\n                    .end((error, data) => {\n                        data.should.have.status(200);\n                        done();\n                    });\n            });\n    });\n});\n"],"file":"loan-test.js"}